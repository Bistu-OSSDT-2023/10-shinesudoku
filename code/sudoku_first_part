#include <bits/stdc++.h>
using namespace std;
bool row[10][10], column[10][10], grid[10][10];
int a[10][10];
void dfs(int x, int y)
{
	if(a[x][y]){
		if(x==9 && y==9){
			for(int i=1; i<=9; ++i){
				cout<<"| ";
				for(int j=1; j<=9; ++j){
					cout << a[i][j] << " | ";
				}
				cout << endl;
				for(int j=1; j<=37; ++j){
					printf("-");
				}
				cout<<endl;
			}
			exit(0);
		}
		else if(y==9){
			dfs(x+1, 1); 	
		}
		else{
			dfs(x, y+1);	
		}
	}



	else{
		for(int i=1; i<=9; ++i){
			int grid_num=(x-1)/3*3+ceil(y/3.0);
			
			if(row[x][i]==false && column[y][i]==false && grid[grid_num][i]==false){
				
				a[x][y]=i;
				row[x][i]=true;
				column[y][i]=true;
				grid[grid_num][i]=true;
				
				if(x==9 && y==9){
					for(int j=1; j<=9; ++j){
						cout<<"| ";
						for(int k=1; k<=9; ++k){
							cout << a[j][k] << " | ";
						}
						cout << endl;
						for(int j=1; j<=37; ++j){
							printf("-");
						}
						cout << endl;
					}
					exit(0);
				}
				else if(y==9){	
					dfs(x+1, 1);
					
					a[x][y]=0;
					row[x][i]=false;
					column[y][i]=false;
					grid[grid_num][i]=false;
				}
				else{	
					dfs(x, y+1);
					
					a[x][y]=0;
					row[x][i]=false;
					column[y][i]=false;
					grid[grid_num][i]=false;
				}

			}
		}
	}
}

