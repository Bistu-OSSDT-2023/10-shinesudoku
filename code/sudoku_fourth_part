bool solve(int board[SIZE][SIZE]) {
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            if (board[row][col] == 0) {
                for (int num = 1; num <= 9; num++) {
                    if (isValid(board, row, col, num)) {
                        board[row][col] = num;
                        if (solve(board)) {
                            return true;
                        }
                        board[row][col] = 0;
                    }
                }
                return false;
            }
        }
    }
    return true;
}

void generatePuzzle(int board[SIZE][SIZE]) {
    srand(time(NULL));
    solve(board);




    int count = 45;
    while (count > 0) {
        int row = rand() % SIZE;
        int col = rand() % SIZE;
        if (board[row][col] != 0) {
            board[row][col] = 0;
            count--;
        }
    }
}

int main() {
    int board[SIZE][SIZE] = {0};

    generatePuzzle(board);
    printf("数独谜题：\n");
    printBoard(board);

   
